# Generated by Django 5.2.4 on 2025-07-27 14:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import funeraria.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DependenteStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, verbose_name='Status')),
                ('descricao', models.TextField(verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Status do Dependente',
                'verbose_name_plural': 'Status dos Dependentes',
                'db_table': 'dependente_status',
            },
        ),
        migrations.CreateModel(
            name='FunerariaStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, verbose_name='Status')),
                ('descricao', models.TextField(verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Status',
                'db_table': 'funeraria_status',
            },
        ),
        migrations.CreateModel(
            name='FunerariaTipos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Tipo de Serviço',
                'verbose_name_plural': 'Tipos de Serviços',
                'db_table': 'funeraria_tipos',
            },
        ),
        migrations.CreateModel(
            name='ClienteFuneraria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[funeraria.models.validate_cpf], verbose_name='CPF')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
                ('endereco', models.TextField(verbose_name='Endereço')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='funeraria.dependentestatus', verbose_name='Status do Cliente')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'cliente_funeraria',
            },
        ),
        migrations.CreateModel(
            name='FuncionarioFuneraria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[funeraria.models.validate_cpf], verbose_name='CPF')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='funcionarios_funeraria', related_query_name='funcionario_funeraria', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='funcionarios_funeraria', related_query_name='funcionario_funeraria', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'db_table': 'funcionario_funeraria',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DependenteFuneraria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[funeraria.models.validate_cpf], verbose_name='CPF')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1, verbose_name='Gênero')),
                ('telefone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
                ('endereco', models.TextField(verbose_name='Endereço')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependentes', to='funeraria.clientefuneraria', verbose_name='Cliente')),
                ('dependente_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='funeraria.dependentestatus', verbose_name='Status do Dependente')),
                ('funcionario_atualizacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dependentes_atualizados', to='funeraria.funcionariofuneraria', verbose_name='Funcionário que Atualizou')),
                ('funcionario_criacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dependentes_criados', to='funeraria.funcionariofuneraria', verbose_name='Funcionário que Criou')),
            ],
            options={
                'verbose_name': 'Dependente',
                'verbose_name_plural': 'Dependentes',
                'db_table': 'dependente_funeraria',
            },
        ),
        migrations.AddField(
            model_name='clientefuneraria',
            name='funcionario_atualizacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clientes_atualizados', to='funeraria.funcionariofuneraria', verbose_name='Funcionário que Atualizou'),
        ),
        migrations.AddField(
            model_name='clientefuneraria',
            name='funcionario_cadastro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clientes_cadastrados', to='funeraria.funcionariofuneraria', verbose_name='Funcionário que Cadastrou'),
        ),
        migrations.CreateModel(
            name='PlanoFuneraria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_mensal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Mensal')),
                ('tipo_renovacao', models.CharField(choices=[('MENSAL', 'Mensal'), ('TRIMESTRAL', 'Trimestral'), ('SEMESTRAL', 'Semestral'), ('ANUAL', 'Anual')], max_length=20, verbose_name='Tipo de Renovação')),
                ('cobertura', models.TextField(verbose_name='Cobertura')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('funcionario_atualizacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='planos_atualizados', to='funeraria.funcionariofuneraria', verbose_name='Funcionário que Atualizou')),
                ('funcionario_criacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='planos_criados', to='funeraria.funcionariofuneraria', verbose_name='Funcionário que Criou')),
                ('plano_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='funeraria.funerariastatus', verbose_name='Status do Plano')),
            ],
            options={
                'verbose_name': 'Plano Funerário',
                'verbose_name_plural': 'Planos Funerários',
                'db_table': 'plano_funeraria',
            },
        ),
        migrations.CreateModel(
            name='PagamentoFuneraria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_pago', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Pago')),
                ('data_hora_pagto', models.DateTimeField(verbose_name='Data/Hora do Pagamento')),
                ('forma_pagamento', models.CharField(choices=[('DINHEIRO', 'Dinheiro'), ('CARTAO_CREDITO', 'Cartão de Crédito'), ('CARTAO_DEBITO', 'Cartão de Débito'), ('TRANSFERENCIA', 'Transferência Bancária'), ('PIX', 'PIX'), ('BOLETO', 'Boleto Bancário')], max_length=20, verbose_name='Forma de Pagamento')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status_pagamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='funeraria.funerariastatus', verbose_name='Status do Pagamento')),
                ('plano_funeraria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pagamentos', to='funeraria.planofuneraria', verbose_name='Plano Funerário')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'db_table': 'pagamento_funeraria',
                'ordering': ['-data_hora_pagto'],
            },
        ),
        migrations.CreateModel(
            name='ServicoPrestadoFuneraria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora_servico', models.DateTimeField(verbose_name='Data/Hora do Serviço')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='servicos', to='funeraria.clientefuneraria', verbose_name='Cliente')),
                ('funcionario_atualizacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='servicos_atualizados', to='funeraria.funcionariofuneraria', verbose_name='Funcionário que Atualizou')),
                ('funcionario_criacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='servicos_criados', to='funeraria.funcionariofuneraria', verbose_name='Funcionário que Criou')),
                ('plano', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='servicos', to='funeraria.planofuneraria', verbose_name='Plano')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='funeraria.funerariatipos', verbose_name='Tipo de Serviço')),
            ],
            options={
                'verbose_name': 'Serviço Prestado',
                'verbose_name_plural': 'Serviços Prestados',
                'db_table': 'servico_prestado_funeraria',
                'ordering': ['-data_hora_servico'],
            },
        ),
    ]
